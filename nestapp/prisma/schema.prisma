// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id            Int                 @default(autoincrement())   @id
  name          String
  email         String              @unique
  password      String              
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt
  locations     Locations[]         
}

model Locations {
  id            Int                 @default(autoincrement())   @id
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt

  lat           Float       
  lon           Float
  name          String
  country       String?
  state         String?

  users         Users[]
  weather       Weathers?           @relation(fields: [weatherId], references: [id]) //, onDelete: Cascade
  weatherId     Int?                @unique

  @@unique(fields: [lat, lon], name: "ll")
}

model Weathers {
  id            Int                 @default(autoincrement())   @id
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt

  current       Current?            @relation(fields: [currentId], references: [id])
  currentId     Int?                @unique
  days          Days[]
  // Hours         Hours[]

  locations     Locations?
}

model Current {
  id            Int                 @default(autoincrement())   @id
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt

  dt            Int                 
  current       Json                

  weather       Weathers?           //@relation(fields: [weatherId], references: [id], onDelete: Cascade)
}

model Days {
  id            Int                 @default(autoincrement())   @id
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt

  dt            Int                 
  daily         Json                

  weather       Weathers?           @relation(fields: [weatherId], references: [id], onDelete: Cascade)
  weatherId     Int?
}

// model Hours {
//   id            Int                 @default(autoincrement())   @id
//   createdAt     DateTime            @default(now())
//   updatedAt     DateTime            @updatedAt

//   hourly        Json                @unique

//   weather       Weathers[]
// }

// model RefreshToken { //Deprecated
//   id            Int                 @default(autoincrement())   @id
//   refresh_token String              
//   userId        Int                 @unique
//   createdAt     DateTime            @default(now())
//   updatedAt     DateTime            @updatedAt
// }