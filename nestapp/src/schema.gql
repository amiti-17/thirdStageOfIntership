# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AuthLoginInput {
  email: String!
  password: String!
}

input CreateUserInput {
  email: String!
  name: String!
  password: String!
}

type CurrentW {
  current: JSON!
  dt: Int!
  id: Int!
  weather: Weather
}

type DaysW {
  daily: JSON!
  dt: Int!
  id: Int!
  weather: Weather
}

input FindOneByFetchedObjInput {
  country: String
  lat: Float!
  lon: Float!
  name: String!
  state: String
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Location {
  country: String
  id: Int!
  lat: Float!
  lon: Float!
  name: String!
  state: String
  users: [SafeUser]!
  weather: Weather
  weatherId: Int
}

type LoginResponse {
  status: Boolean!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): SafeUser!
  login(authLoginInput: AuthLoginInput!): LoginResponse!
  refreshToken: RefreshTokenResponse!
  removeUser(id: Int!): SafeUser!
  signup(createUserInput: CreateUserInput!): SafeUser!
  updateUsersLocations(updateUserLocationInput: [UpdateUserLocationsInput!]!): [Location!]!
}

type Query {
  findById(id: Float!): SafeUser!
  getCurrentUser: SafeUser!
  getListOfPlaces(quantity: Int!): [Location!]!
  locationByCoordinates(coordinates: FindOneByFetchedObjInput!): Location!
  locationById(id: Int!): Location!
  locations: [Location!]!
  ping: Boolean!
  user(email: String!): SafeUser!
  userUnsafe(email: String!): User!
  users: [SafeUser!]!
}

type RefreshTokenResponse {
  status: Boolean!
}

type SafeUser {
  email: String!
  id: Int!
  locations: [Location]!
  name: String!
}

type Subscription {
  locationAdded: Location!
}

input UpdateUserLocationsInput {
  country: String
  lat: Float!
  lon: Float!
  name: String!
  state: String
}

type User {
  email: String!
  id: Int!
  locations: [Location]!
  name: String!
  password: String!
}

type Weather {
  current: CurrentW
  currentId: Int!
  days: [DaysW!]
  id: Int!
  locations: [Location]!
}