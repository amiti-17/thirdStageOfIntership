"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/weather",{

/***/ "./src/components/Weather/WeatherSection/components/Search/index.tsx":
/*!***************************************************************************!*\
  !*** ./src/components/Weather/WeatherSection/components/Search/index.tsx ***!
  \***************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Search: function() { return /* binding */ Search; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _barrel_optimize_names_Box_TextField_mui_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=Box,TextField!=!@mui/material */ \"__barrel_optimize__?names=Box,TextField!=!./node_modules/@mui/material/index.js\");\n/* harmony import */ var _mui_material_Autocomplete__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mui/material/Autocomplete */ \"./node_modules/@mui/material/Autocomplete/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Contexts_placesContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../Contexts/placesContext */ \"./src/Contexts/placesContext.ts\");\n\nvar _s = $RefreshSig$();\n\n\n\n\nfunction Search() {\n    _s();\n    const cities = [\n        {\n            name: \"Kyiv\",\n            lat: 0,\n            lon: 0\n        } //TODO: replace this example object with fetched list of places...\n    ];\n    const optionsArrExp = [\n        \"string1\",\n        \"string2\"\n    ];\n    const { places, setPlaces } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_Contexts_placesContext__WEBPACK_IMPORTED_MODULE_2__.PlacesContext);\n    const [inputValue, setInputValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [options, setOptions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(options.slice(0, 2).map((el)=>[\n            el.name,\n            el.state,\n            el.country\n        ].join(\", \")));\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        fetchCoordinatesAndSetOptions(cities);\n    }, [\n        value\n    ]);\n    // function getLocationByName(name: string): LocationFetchedFromSearchString {\n    //   const splicedName = name.split(', ');\n    //   if (splicedName.length === 3) {\n    //     return options.find(el => el.name === splicedName[0] && el.state === splicedName[1] && el.country === splicedName[2]);\n    //   }\n    //   if (setInputValue.length === 2) {\n    //     return options.find(el => el.name === splicedName[0] && (el.state === splicedName[1] || el.country === splicedName[1]));\n    //   }\n    //   return options.find(el => el.name === splicedName[0]);\n    // }\n    // function verifyPlacesAndPushIfUniq(newPlace) {\n    //   const theSamePlaces = places.filter(place => place.lat === newPlace.lat && place.lon === newPlace.lon);\n    //   const newPlaces = places.slice();\n    //   newPlaces.push(newPlace);\n    //   if (!theSamePlaces) setPlaces(newPlaces);\n    // }\n    function setOptionsWrapper(options) {\n        // console.log(options.map(el => `${el.name}${el?.state ? ', ' + el.state : \"\"}${el?.country ? ', ' + el.country : ''}`));\n        setOptions(options); //TODO: rewrite for parsing into fetched data\n    }\n    // async function getCoordinates(nameOfPlace): Promise<LocationFetchedFromSearchString[]> {\n    //   let limit = 5;\n    //   const myPlace = await fetch(urls.OW_URL_GEO + `appid=${urls.OW_API_KEY}&q=${nameOfPlace}&limit=${limit}`);\n    //   return await myPlace.json();\n    // }\n    async function fetchCoordinatesAndSetOptions(nameOfPlace) {\n        // const mySupposesPlaces = await getCoordinates(nameOfPlace);\n        const mySupposesPlaces = [\n            {\n                name: \"Klagenfurt\",\n                lat: 46.623943,\n                lon: 14.3075976,\n                country: \"AT\"\n            },\n            {\n                name: \"Koło\",\n                lat: 52.2019866,\n                lon: 18.6359912,\n                country: \"PL\"\n            },\n            {\n                name: \"Koło\",\n                lat: 52.1983889,\n                lon: 18.635758559956344,\n                country: \"PL\",\n                state: \"Greater Poland Voivodeship\"\n            },\n            {\n                name: \"Koło\",\n                lat: 51.4276417,\n                lon: 19.8296447,\n                country: \"PL\",\n                state: \"Ł\\xf3dź Voivodeship\"\n            },\n            {\n                name: \"K\\xf6nigsallee\",\n                lat: 49.93645405,\n                lon: 11.601889705219069,\n                country: \"DE\"\n            }\n        ];\n        setOptionsWrapper(mySupposesPlaces);\n    // console.log(nameOfPlace, mySupposesPlaces);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_TextField_mui_material__WEBPACK_IMPORTED_MODULE_3__.Box, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: \"value: \".concat(value !== null ? \"'\".concat(value, \"'\") : \"null\")\n            }, void 0, false, {\n                fileName: \"D:\\\\SysGears\\\\intership\\\\3d-stage\\\\nextapp\\\\src\\\\components\\\\Weather\\\\WeatherSection\\\\components\\\\Search\\\\index.tsx\",\n                lineNumber: 66,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_material_Autocomplete__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                freeSolo: true,\n                limitTags: 3,\n                id: \"country-select-demo\",\n                sx: {\n                    width: 300\n                },\n                options: countries,\n                autoHighlight: true,\n                getOptionLabel: (option)=>typeof option === \"string\" ? option : option.label,\n                renderOption: (props, option)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_TextField_mui_material__WEBPACK_IMPORTED_MODULE_3__.Box, {\n                        component: \"li\",\n                        sx: {\n                            \"& > img\": {\n                                mr: 2,\n                                flexShrink: 0\n                            }\n                        },\n                        ...props,\n                        children: option.label\n                    }, void 0, false, void 0, void 0),\n                renderInput: (params)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_TextField_mui_material__WEBPACK_IMPORTED_MODULE_3__.TextField, {\n                        ...params,\n                        label: \"Choose a country\",\n                        inputProps: {\n                            ...params.inputProps\n                        }\n                    }, void 0, false, void 0, void 0),\n                inputValue: inputValue,\n                onInputChange: (event, value, reason)=>{\n                    // setInputValue(value);\n                    // if (value && reason === 'input') {\n                    //   fetchCoordinatesAndSetOptions(value);\n                    // } else {\n                    //   setOptionsWrapper(cities);\n                    // }\n                    console.log(event, value, reason);\n                }\n            }, void 0, false, {\n                fileName: \"D:\\\\SysGears\\\\intership\\\\3d-stage\\\\nextapp\\\\src\\\\components\\\\Weather\\\\WeatherSection\\\\components\\\\Search\\\\index.tsx\",\n                lineNumber: 67,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\SysGears\\\\intership\\\\3d-stage\\\\nextapp\\\\src\\\\components\\\\Weather\\\\WeatherSection\\\\components\\\\Search\\\\index.tsx\",\n        lineNumber: 65,\n        columnNumber: 5\n    }, this);\n} // interface CountryType {\n //   code: string;\n //   label: string;\n //   phone: string;\n //   suggested?: boolean;\n // }\n // const countries: CountryType[] = [\n //   { code: 'AD', label: 'Andorra', phone: '376' },\n //   {\n //     code: 'AE',\n //     label: 'United Arab Emirates',\n //     phone: '971',\n //   },\n //   { code: 'AF', label: 'Afghanistan', phone: '93' },\n //   {\n //     code: 'AG',\n //     label: 'Antigua and Barbuda',\n //     phone: '1-268',\n //   },\n //   { code: 'AI', label: 'Anguilla', phone: '1-264' },\n //   { code: 'AL', label: 'Albania', phone: '355' },\n //   { code: 'AM', label: 'Armenia', phone: '374' },\n //   { code: 'AO', label: 'Angola', phone: '244' },\n //   { code: 'AQ', label: 'Antarctica', phone: '672' },\n //   { code: 'AR', label: 'Argentina', phone: '54' },\n //   { code: 'AS', label: 'American Samoa', phone: '1-684' },\n //   { code: 'AT', label: 'Austria', phone: '43' },\n //   {\n //     code: 'AU',\n //     label: 'Australia',\n //     phone: '61',\n //     suggested: true,\n //   },\n //   { code: 'AW', label: 'Aruba', phone: '297' },\n //   { code: 'AX', label: 'Alland Islands', phone: '358' },\n //   { code: 'AZ', label: 'Azerbaijan', phone: '994' },\n //   {\n //     code: 'BA',\n //     label: 'Bosnia and Herzegovina',\n //     phone: '387',\n //   },\n //   { code: 'BB', label: 'Barbados', phone: '1-246' },\n //   { code: 'BD', label: 'Bangladesh', phone: '880' },\n //   { code: 'BE', label: 'Belgium', phone: '32' },\n //   { code: 'BF', label: 'Burkina Faso', phone: '226' },\n //   { code: 'BG', label: 'Bulgaria', phone: '359' },\n //   { code: 'BH', label: 'Bahrain', phone: '973' },\n //   { code: 'BI', label: 'Burundi', phone: '257' },\n //   { code: 'BJ', label: 'Benin', phone: '229' },\n //   { code: 'BL', label: 'Saint Barthelemy', phone: '590' },\n //   { code: 'BM', label: 'Bermuda', phone: '1-441' },\n //   { code: 'BN', label: 'Brunei Darussalam', phone: '673' },\n //   { code: 'BO', label: 'Bolivia', phone: '591' },\n //   { code: 'BR', label: 'Brazil', phone: '55' },\n //   { code: 'BS', label: 'Bahamas', phone: '1-242' },\n //   { code: 'BT', label: 'Bhutan', phone: '975' },\n //   { code: 'BV', label: 'Bouvet Island', phone: '47' },\n //   { code: 'BW', label: 'Botswana', phone: '267' },\n //   { code: 'BY', label: 'Belarus', phone: '375' },\n //   { code: 'BZ', label: 'Belize', phone: '501' },\n //   {\n //     code: 'CA',\n //     label: 'Canada',\n //     phone: '1',\n //     suggested: true,\n //   },\n //   {\n //     code: 'CC',\n //     label: 'Cocos (Keeling) Islands',\n //     phone: '61',\n //   },\n //   {\n //     code: 'CD',\n //     label: 'Congo, Democratic Republic of the',\n //     phone: '243',\n //   },\n //   {\n //     code: 'CF',\n //     label: 'Central African Republic',\n //     phone: '236',\n //   },\n //   {\n //     code: 'CG',\n //     label: 'Congo, Republic of the',\n //     phone: '242',\n //   },\n //   { code: 'CH', label: 'Switzerland', phone: '41' },\n //   { code: 'CI', label: \"Cote d'Ivoire\", phone: '225' },\n //   { code: 'CK', label: 'Cook Islands', phone: '682' },\n //   { code: 'CL', label: 'Chile', phone: '56' },\n //   { code: 'CM', label: 'Cameroon', phone: '237' },\n //   { code: 'CN', label: 'China', phone: '86' },\n //   { code: 'CO', label: 'Colombia', phone: '57' },\n //   { code: 'CR', label: 'Costa Rica', phone: '506' },\n //   { code: 'CU', label: 'Cuba', phone: '53' },\n //   { code: 'CV', label: 'Cape Verde', phone: '238' },\n //   { code: 'CW', label: 'Curacao', phone: '599' },\n //   { code: 'CX', label: 'Christmas Island', phone: '61' },\n //   { code: 'CY', label: 'Cyprus', phone: '357' },\n //   { code: 'CZ', label: 'Czech Republic', phone: '420' },\n //   {\n //     code: 'DE',\n //     label: 'Germany',\n //     phone: '49',\n //     suggested: true,\n //   },\n //   { code: 'DJ', label: 'Djibouti', phone: '253' },\n //   { code: 'DK', label: 'Denmark', phone: '45' },\n //   { code: 'DM', label: 'Dominica', phone: '1-767' },\n //   {\n //     code: 'DO',\n //     label: 'Dominican Republic',\n //     phone: '1-809',\n //   },\n //   { code: 'DZ', label: 'Algeria', phone: '213' },\n //   { code: 'EC', label: 'Ecuador', phone: '593' },\n //   { code: 'EE', label: 'Estonia', phone: '372' },\n //   { code: 'EG', label: 'Egypt', phone: '20' },\n //   { code: 'EH', label: 'Western Sahara', phone: '212' },\n //   { code: 'ER', label: 'Eritrea', phone: '291' },\n //   { code: 'ES', label: 'Spain', phone: '34' },\n //   { code: 'ET', label: 'Ethiopia', phone: '251' },\n //   { code: 'FI', label: 'Finland', phone: '358' },\n //   { code: 'FJ', label: 'Fiji', phone: '679' },\n //   {\n //     code: 'FK',\n //     label: 'Falkland Islands (Malvinas)',\n //     phone: '500',\n //   },\n //   {\n //     code: 'FM',\n //     label: 'Micronesia, Federated States of',\n //     phone: '691',\n //   },\n //   { code: 'FO', label: 'Faroe Islands', phone: '298' },\n //   {\n //     code: 'FR',\n //     label: 'France',\n //     phone: '33',\n //     suggested: true,\n //   },\n //   { code: 'GA', label: 'Gabon', phone: '241' },\n //   { code: 'GB', label: 'United Kingdom', phone: '44' },\n //   { code: 'GD', label: 'Grenada', phone: '1-473' },\n //   { code: 'GE', label: 'Georgia', phone: '995' },\n //   { code: 'GF', label: 'French Guiana', phone: '594' },\n //   { code: 'GG', label: 'Guernsey', phone: '44' },\n //   { code: 'GH', label: 'Ghana', phone: '233' },\n //   { code: 'GI', label: 'Gibraltar', phone: '350' },\n //   { code: 'GL', label: 'Greenland', phone: '299' },\n //   { code: 'GM', label: 'Gambia', phone: '220' },\n //   { code: 'GN', label: 'Guinea', phone: '224' },\n //   { code: 'GP', label: 'Guadeloupe', phone: '590' },\n //   { code: 'GQ', label: 'Equatorial Guinea', phone: '240' },\n //   { code: 'GR', label: 'Greece', phone: '30' },\n //   {\n //     code: 'GS',\n //     label: 'South Georgia and the South Sandwich Islands',\n //     phone: '500',\n //   },\n //   { code: 'GT', label: 'Guatemala', phone: '502' },\n //   { code: 'GU', label: 'Guam', phone: '1-671' },\n //   { code: 'GW', label: 'Guinea-Bissau', phone: '245' },\n //   { code: 'GY', label: 'Guyana', phone: '592' },\n //   { code: 'HK', label: 'Hong Kong', phone: '852' },\n //   {\n //     code: 'HM',\n //     label: 'Heard Island and McDonald Islands',\n //     phone: '672',\n //   },\n //   { code: 'HN', label: 'Honduras', phone: '504' },\n //   { code: 'HR', label: 'Croatia', phone: '385' },\n //   { code: 'HT', label: 'Haiti', phone: '509' },\n //   { code: 'HU', label: 'Hungary', phone: '36' },\n //   { code: 'ID', label: 'Indonesia', phone: '62' },\n //   { code: 'IE', label: 'Ireland', phone: '353' },\n //   { code: 'IL', label: 'Israel', phone: '972' },\n //   { code: 'IM', label: 'Isle of Man', phone: '44' },\n //   { code: 'IN', label: 'India', phone: '91' },\n //   {\n //     code: 'IO',\n //     label: 'British Indian Ocean Territory',\n //     phone: '246',\n //   },\n //   { code: 'IQ', label: 'Iraq', phone: '964' },\n //   {\n //     code: 'IR',\n //     label: 'Iran, Islamic Republic of',\n //     phone: '98',\n //   },\n //   { code: 'IS', label: 'Iceland', phone: '354' },\n //   { code: 'IT', label: 'Italy', phone: '39' },\n //   { code: 'JE', label: 'Jersey', phone: '44' },\n //   { code: 'JM', label: 'Jamaica', phone: '1-876' },\n //   { code: 'JO', label: 'Jordan', phone: '962' },\n //   {\n //     code: 'JP',\n //     label: 'Japan',\n //     phone: '81',\n //     suggested: true,\n //   },\n //   { code: 'KE', label: 'Kenya', phone: '254' },\n //   { code: 'KG', label: 'Kyrgyzstan', phone: '996' },\n //   { code: 'KH', label: 'Cambodia', phone: '855' },\n //   { code: 'KI', label: 'Kiribati', phone: '686' },\n //   { code: 'KM', label: 'Comoros', phone: '269' },\n //   {\n //     code: 'KN',\n //     label: 'Saint Kitts and Nevis',\n //     phone: '1-869',\n //   },\n //   {\n //     code: 'KP',\n //     label: \"Korea, Democratic People's Republic of\",\n //     phone: '850',\n //   },\n //   { code: 'KR', label: 'Korea, Republic of', phone: '82' },\n //   { code: 'KW', label: 'Kuwait', phone: '965' },\n //   { code: 'KY', label: 'Cayman Islands', phone: '1-345' },\n //   { code: 'KZ', label: 'Kazakhstan', phone: '7' },\n //   {\n //     code: 'LA',\n //     label: \"Lao People's Democratic Republic\",\n //     phone: '856',\n //   },\n //   { code: 'LB', label: 'Lebanon', phone: '961' },\n //   { code: 'LC', label: 'Saint Lucia', phone: '1-758' },\n //   { code: 'LI', label: 'Liechtenstein', phone: '423' },\n //   { code: 'LK', label: 'Sri Lanka', phone: '94' },\n //   { code: 'LR', label: 'Liberia', phone: '231' },\n //   { code: 'LS', label: 'Lesotho', phone: '266' },\n //   { code: 'LT', label: 'Lithuania', phone: '370' },\n //   { code: 'LU', label: 'Luxembourg', phone: '352' },\n //   { code: 'LV', label: 'Latvia', phone: '371' },\n //   { code: 'LY', label: 'Libya', phone: '218' },\n //   { code: 'MA', label: 'Morocco', phone: '212' },\n //   { code: 'MC', label: 'Monaco', phone: '377' },\n //   {\n //     code: 'MD',\n //     label: 'Moldova, Republic of',\n //     phone: '373',\n //   },\n //   { code: 'ME', label: 'Montenegro', phone: '382' },\n //   {\n //     code: 'MF',\n //     label: 'Saint Martin (French part)',\n //     phone: '590',\n //   },\n //   { code: 'MG', label: 'Madagascar', phone: '261' },\n //   { code: 'MH', label: 'Marshall Islands', phone: '692' },\n //   {\n //     code: 'MK',\n //     label: 'Macedonia, the Former Yugoslav Republic of',\n //     phone: '389',\n //   },\n //   { code: 'ML', label: 'Mali', phone: '223' },\n //   { code: 'MM', label: 'Myanmar', phone: '95' },\n //   { code: 'MN', label: 'Mongolia', phone: '976' },\n //   { code: 'MO', label: 'Macao', phone: '853' },\n //   {\n //     code: 'MP',\n //     label: 'Northern Mariana Islands',\n //     phone: '1-670',\n //   },\n //   { code: 'MQ', label: 'Martinique', phone: '596' },\n //   { code: 'MR', label: 'Mauritania', phone: '222' },\n //   { code: 'MS', label: 'Montserrat', phone: '1-664' },\n //   { code: 'MT', label: 'Malta', phone: '356' },\n //   { code: 'MU', label: 'Mauritius', phone: '230' },\n //   { code: 'MV', label: 'Maldives', phone: '960' },\n //   { code: 'MW', label: 'Malawi', phone: '265' },\n //   { code: 'MX', label: 'Mexico', phone: '52' },\n //   { code: 'MY', label: 'Malaysia', phone: '60' },\n //   { code: 'MZ', label: 'Mozambique', phone: '258' },\n //   { code: 'NA', label: 'Namibia', phone: '264' },\n //   { code: 'NC', label: 'New Caledonia', phone: '687' },\n //   { code: 'NE', label: 'Niger', phone: '227' },\n //   { code: 'NF', label: 'Norfolk Island', phone: '672' },\n //   { code: 'NG', label: 'Nigeria', phone: '234' },\n //   { code: 'NI', label: 'Nicaragua', phone: '505' },\n //   { code: 'NL', label: 'Netherlands', phone: '31' },\n //   { code: 'NO', label: 'Norway', phone: '47' },\n //   { code: 'NP', label: 'Nepal', phone: '977' },\n //   { code: 'NR', label: 'Nauru', phone: '674' },\n //   { code: 'NU', label: 'Niue', phone: '683' },\n //   { code: 'NZ', label: 'New Zealand', phone: '64' },\n //   { code: 'OM', label: 'Oman', phone: '968' },\n //   { code: 'PA', label: 'Panama', phone: '507' },\n //   { code: 'PE', label: 'Peru', phone: '51' },\n //   { code: 'PF', label: 'French Polynesia', phone: '689' },\n //   { code: 'PG', label: 'Papua New Guinea', phone: '675' },\n //   { code: 'PH', label: 'Philippines', phone: '63' },\n //   { code: 'PK', label: 'Pakistan', phone: '92' },\n //   { code: 'PL', label: 'Poland', phone: '48' },\n //   {\n //     code: 'PM',\n //     label: 'Saint Pierre and Miquelon',\n //     phone: '508',\n //   },\n //   { code: 'PN', label: 'Pitcairn', phone: '870' },\n //   { code: 'PR', label: 'Puerto Rico', phone: '1' },\n //   {\n //     code: 'PS',\n //     label: 'Palestine, State of',\n //     phone: '970',\n //   },\n //   { code: 'PT', label: 'Portugal', phone: '351' },\n //   { code: 'PW', label: 'Palau', phone: '680' },\n //   { code: 'PY', label: 'Paraguay', phone: '595' },\n //   { code: 'QA', label: 'Qatar', phone: '974' },\n //   { code: 'RE', label: 'Reunion', phone: '262' },\n //   { code: 'RO', label: 'Romania', phone: '40' },\n //   { code: 'RS', label: 'Serbia', phone: '381' },\n //   { code: 'RU', label: 'Russian Federation', phone: '7' },\n //   { code: 'RW', label: 'Rwanda', phone: '250' },\n //   { code: 'SA', label: 'Saudi Arabia', phone: '966' },\n //   { code: 'SB', label: 'Solomon Islands', phone: '677' },\n //   { code: 'SC', label: 'Seychelles', phone: '248' },\n //   { code: 'SD', label: 'Sudan', phone: '249' },\n //   { code: 'SE', label: 'Sweden', phone: '46' },\n //   { code: 'SG', label: 'Singapore', phone: '65' },\n //   { code: 'SH', label: 'Saint Helena', phone: '290' },\n //   { code: 'SI', label: 'Slovenia', phone: '386' },\n //   {\n //     code: 'SJ',\n //     label: 'Svalbard and Jan Mayen',\n //     phone: '47',\n //   },\n //   { code: 'SK', label: 'Slovakia', phone: '421' },\n //   { code: 'SL', label: 'Sierra Leone', phone: '232' },\n //   { code: 'SM', label: 'San Marino', phone: '378' },\n //   { code: 'SN', label: 'Senegal', phone: '221' },\n //   { code: 'SO', label: 'Somalia', phone: '252' },\n //   { code: 'SR', label: 'Suriname', phone: '597' },\n //   { code: 'SS', label: 'South Sudan', phone: '211' },\n //   {\n //     code: 'ST',\n //     label: 'Sao Tome and Principe',\n //     phone: '239',\n //   },\n //   { code: 'SV', label: 'El Salvador', phone: '503' },\n //   {\n //     code: 'SX',\n //     label: 'Sint Maarten (Dutch part)',\n //     phone: '1-721',\n //   },\n //   {\n //     code: 'SY',\n //     label: 'Syrian Arab Republic',\n //     phone: '963',\n //   },\n //   { code: 'SZ', label: 'Swaziland', phone: '268' },\n //   {\n //     code: 'TC',\n //     label: 'Turks and Caicos Islands',\n //     phone: '1-649',\n //   },\n //   { code: 'TD', label: 'Chad', phone: '235' },\n //   {\n //     code: 'TF',\n //     label: 'French Southern Territories',\n //     phone: '262',\n //   },\n //   { code: 'TG', label: 'Togo', phone: '228' },\n //   { code: 'TH', label: 'Thailand', phone: '66' },\n //   { code: 'TJ', label: 'Tajikistan', phone: '992' },\n //   { code: 'TK', label: 'Tokelau', phone: '690' },\n //   { code: 'TL', label: 'Timor-Leste', phone: '670' },\n //   { code: 'TM', label: 'Turkmenistan', phone: '993' },\n //   { code: 'TN', label: 'Tunisia', phone: '216' },\n //   { code: 'TO', label: 'Tonga', phone: '676' },\n //   { code: 'TR', label: 'Turkey', phone: '90' },\n //   {\n //     code: 'TT',\n //     label: 'Trinidad and Tobago',\n //     phone: '1-868',\n //   },\n //   { code: 'TV', label: 'Tuvalu', phone: '688' },\n //   {\n //     code: 'TW',\n //     label: 'Taiwan, Republic of China',\n //     phone: '886',\n //   },\n //   {\n //     code: 'TZ',\n //     label: 'United Republic of Tanzania',\n //     phone: '255',\n //   },\n //   { code: 'UA', label: 'Ukraine', phone: '380' },\n //   { code: 'UG', label: 'Uganda', phone: '256' },\n //   {\n //     code: 'US',\n //     label: 'United States',\n //     phone: '1',\n //     suggested: true,\n //   },\n //   { code: 'UY', label: 'Uruguay', phone: '598' },\n //   { code: 'UZ', label: 'Uzbekistan', phone: '998' },\n //   {\n //     code: 'VA',\n //     label: 'Holy See (Vatican City State)',\n //     phone: '379',\n //   },\n //   {\n //     code: 'VC',\n //     label: 'Saint Vincent and the Grenadines',\n //     phone: '1-784',\n //   },\n //   { code: 'VE', label: 'Venezuela', phone: '58' },\n //   {\n //     code: 'VG',\n //     label: 'British Virgin Islands',\n //     phone: '1-284',\n //   },\n //   {\n //     code: 'VI',\n //     label: 'US Virgin Islands',\n //     phone: '1-340',\n //   },\n //   { code: 'VN', label: 'Vietnam', phone: '84' },\n //   { code: 'VU', label: 'Vanuatu', phone: '678' },\n //   { code: 'WF', label: 'Wallis and Futuna', phone: '681' },\n //   { code: 'WS', label: 'Samoa', phone: '685' },\n //   { code: 'XK', label: 'Kosovo', phone: '383' },\n //   { code: 'YE', label: 'Yemen', phone: '967' },\n //   { code: 'YT', label: 'Mayotte', phone: '262' },\n //   { code: 'ZA', label: 'South Africa', phone: '27' },\n //   { code: 'ZM', label: 'Zambia', phone: '260' },\n //   { code: 'ZW', label: 'Zimbabwe', phone: '263' },\n // ];\n_s(Search, \"V3GfIqU8+riQ03DMT1MiW2a0jMI=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/Weather/WeatherSection/components/Search/index.tsx\n"));

/***/ })

});